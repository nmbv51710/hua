解决GitHub的raw.githubusercontent.com无法连接问题

https://site.ip138.com/raw.Githubusercontent.com/

输入raw.githubusercontent.com

查询IP地址

nano /etc/hosts
添加以下内容保存即可 （IP地址查询后相应修改，可以ping不同IP的延时 选择最佳IP地址）

GitHub Start
52.74.223.119 github.com
151.101.76.133 raw.githubusercontent.com
#########################################################################################
wget --no-check-certificate -O gost.sh https://raw.githubusercontent.com/KANIKIG/Multi-EasyGost/master/gost.sh \
&& chmod +x gost.sh \
&& ./gost.sh
#########################################################################################

服务端
cp /etc/gost/config.json /etc/gost/config.json.bak
cat > /etc/gost/config.json <<EOF
{
    "Debug": true,
    "Retries": 0,
    "ServeNodes":
    ["ss+tls://chacha20:McZeLEz88RE@:8338"]
}
EOF

systemctl restart gost
systemctl status gost

客户端
cp  /usr/lib/systemd/system/gost.service /usr/lib/systemd/system/gost.service.bak
cat > /usr/lib/systemd/system/gost.service <<EOF
[Unit]
Description=gost
After=network-online.target
Wants=network-online.target systemd-networkd-wait-online.service

[Service]
Type=simple
User=root
DynamicUser=true
ExecStart=/usr/bin/gost -L=:8338 -F=ss+tls://chacha20:McZeLEz88RE@34.92.28.153:28338?nodelay=true

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reload
systemctl restart gost
systemctl status gost


服务端
gost -L ss://chacha20:123456@:8080
客户端
gost -L=:1080 -F=ss://chacha20:McZeLEz88RE@101.32.202.51:18928?nodelay=true
gost -L=:1081 -F=ss://chacha20:McZeLEz88RE@nat-iplc-szhk2.iplc-ddns.cc:28688?nodelay=true

nohup gost -L=:1080 -F=ss://chacha20:McZeLEz88RE@101.32.202.51:18928?nodelay=true &
nohup gost -L=:1081 -F=ss://chacha20:McZeLEz88RE@nat-iplc-szhk2.iplc-ddns.cc:28688?nodelay=true &

docker run -e PASSWORD=McZeLEz88RE -p1080:18928 -p1080:18928/udp \
--restart=always \
-e "SERVER:101.32.202.51"-e "METHOD=chacha20" -d shadowsocks/shadowsocks-libev



docker run -d \
    --net=host \
    --name _Gost_Tencent \
    --restart=always \
    ginuerzh/gost -L=:10800 -F=ss://chacha20:McZeLEz88RE@101.32.202.51:18928

docker run -d \
    --net=host \
    --name Gost_IPLC \
    --restart=always \
    ginuerzh/gost -L=:10801 -F=ss://chacha20:McZeLEz88RE@nat-iplc-szhk2.iplc-ddns.cc:28688



多路复用TLS
GOST在TLS基础之上扩展出具有多路复用(Multiplex)特性的TLS传输类型(mtls)。

服务端
gost -L mtls://:443
客户端
gost -L :8338 -F mtls://34.92.28.153:443

-----------------------------------
请选择转发协议: 1
------------------------------------------------------------------
------------------------------------------------------------------
请问你要将本机哪个端口接收到的流量进行转发?
请输入: 8388
------------------------------------------------------------------
------------------------------------------------------------------
请问你要将本机从8388接收到的流量转发向哪个IP或域名?
注: IP既可以是[远程机器/当前机器]的公网IP, 也可是以本机本地回环IP(即127.0.0.1)
    具体IP地址的填写, 取决于接收该流量的服务正在监听的IP(详见: https://github.com/stsdust/EasyGost)
请输入: 23.95.221.254
------------------------------------------------------------------
------------------------------------------------------------------
请问你要将本机从8388接收到的流量转发向23.95.221.254的哪个端口?
请输入: 8388
配置已生效，当前配置如下
--------------------------------------------------------
                      GOST 配置                        
--------------------------------------------------------
序号|方法	    |本地端口	|目的地地址:目的地端口
--------------------------------------------------------
 1  |tls+udp不加密  |8388	|23.95.221.254:8388
--------------------------------------------------------
